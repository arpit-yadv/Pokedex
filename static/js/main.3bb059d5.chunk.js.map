{"version":3,"sources":["Pokecard.js","Pokedex.js","Pokemondata.js","Pokegame.js","App.js","reportWebVitals.js","index.js"],"names":["Pokecard","this","props","pokemonData","pokeName","pokeType","pokeExp","id","imgSrc","slice","className","src","alt","Component","Pokedex","title","isWinner","PokeData","exp","map","data","Pokegame","hand1","Array","hand2","Pokemondata","length","randomNo","Math","floor","random","randomIdx","splice","push","exp1","exp2","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAmBeA,G,mLAfF,IAAD,EAEiCC,KAAKC,MAAMC,YAA3CC,EAFD,EAECA,SAASC,EAFV,EAEUA,SAASC,EAFnB,EAEmBA,QAAQC,EAF3B,EAE2BA,GAC3BC,EAAQ,8DALa,YAK2DD,GALhDE,OAAO,GAAK,QAMhD,OACI,sBAAKC,UAAW,WAAhB,UACI,oBAAIA,UAAU,iBAAd,SAAgCN,IAChC,qBAAKM,UAAU,eAAeC,IAAKH,EAAQI,IAAKR,IAChD,4BAAIC,IACJ,4BAAIC,W,GAVGO,cC0BRC,E,uKAxBF,IAEDC,EAAM,GAENA,EAHad,KAAKC,MAAjBc,SAGK,oBAAIN,UAAU,iBAAd,0BAEA,oBAAIA,UAAU,gBAAd,yBAEV,IAAIO,EAAWhB,KAAKC,MAAMe,SAE1B,OACI,sBAAKP,UAAU,UAAf,UACKK,EACD,qDAAwBd,KAAKC,MAAMgB,OACnC,qBAAKR,UAAU,gBAAf,SAEIO,EAASE,KAAI,SAAAC,GAAO,OAAO,cAAC,EAAD,CAAUjB,YAAaiB,gB,GAjBhDP,aCJP,GACX,CAACN,GAAI,EAAGH,SAAU,aAAcC,SAAU,OAAQC,QAAS,IAC3D,CAACC,GAAI,EAAGH,SAAU,WAAYC,SAAU,QAASC,QAAS,IAC1D,CAACC,GAAI,GAAIH,SAAU,UAAWC,SAAU,MAAOC,QAAS,IACxD,CAACC,GAAI,GAAIH,SAAU,aAAcC,SAAU,SAAUC,QAAS,KAC9D,CAACC,GAAI,GAAIH,SAAU,UAAWC,SAAU,WAAYC,QAAS,KAC7D,CAACC,GAAI,GAAIH,SAAU,aAAcC,SAAU,SAAUC,QAAS,IAC9D,CAACC,GAAI,GAAIH,SAAU,SAAUC,SAAU,SAAUC,QAAS,KAC1D,CAACC,GAAI,IAAKH,SAAU,QAASC,SAAU,SAAUC,QAAS,KC6B/Ce,G,6KA5BP,IAFA,IAAIC,EAAO,IAAIC,MACXC,EAAM,YAAIC,GACRH,EAAMI,OAAOF,EAAME,QAAO,CAC5B,IAAIC,EAAUC,KAAKC,MAAMD,KAAKE,SAASN,EAAME,QACzCK,EAAWP,EAAMQ,OAAOL,EAAS,GACrCL,EAAMW,KAAN,MAAAX,EAAK,YAASS,IAGlB,IADA,IAAIG,EAAM,EACV,MAAiBZ,EAAjB,eAAuB,CACnBY,GADS,KACG5B,QAEhB,IAZI,EAYA6B,EAAM,EAZN,cAaaX,GAbb,IAaJ,2BAAuB,CACnBW,GADmB,QACP7B,SAdZ,8BAgBJ,OACI,sBAAKI,UAAU,WAAf,UACI,qBAAKA,UAAU,aAAf,SACI,cAAC,EAAD,CAASO,SAAUK,EAAOJ,IAAKgB,EAAMlB,SAAUkB,EAAKC,MAExD,sBAAKzB,UAAU,aAAf,cACI,cAAC,EAAD,CAASO,SAAUO,EAAON,IAAKiB,EAAMnB,SAAUmB,EAAKD,c,GAvBjDrB,cCORuB,MATf,WACE,OACE,sBAAK1B,UAAU,MAAf,UACE,yCACA,cAAC,EAAD,QCKS2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3bb059d5.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './Pokecard.css'\r\nlet padToThree = (num)=>{return (`00${num}`.slice(-3) + '.png') };\r\nclass Pokecard extends Component{\r\n    render(){\r\n        \r\n        let {pokeName,pokeType,pokeExp,id} = this.props.pokemonData;\r\n        let imgSrc= 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/'+padToThree(id);\r\n        return (\r\n            <div className =\"Pokecard\">\r\n                <h3 className='Pokecard-title'>{pokeName}</h3>\r\n                <img className='Pokecard-img' src={imgSrc} alt={pokeName}/>\r\n                <p>{pokeType}</p>\r\n                <p>{pokeExp}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Pokecard;","import React, { Component } from 'react'\r\nimport './Pokedex.css'\r\nimport Pokecard from './Pokecard';\r\n\r\nclass Pokedex extends Component{\r\n    render(){\r\n        let {isWinner} = this.props;\r\n        let title='';\r\n        if(isWinner){\r\n            title=<h1 className='Pokedex-winner'>Winning Hand</h1>\r\n        }else{\r\n            title=<h1 className='Pokedex-loser'>Losing Hand</h1>\r\n        }\r\n        let PokeData = this.props.PokeData;\r\n        \r\n        return(\r\n            <div className=\"Pokedex\">\r\n                {title}\r\n                <h3>Total Experience : {this.props.exp}</h3>\r\n                <div className=\"Pokedex-cards\">\r\n                {\r\n                    PokeData.map(data=>{return <Pokecard pokemonData={data}/>})\r\n                }\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Pokedex;","export default [\r\n    {id: 4, pokeName: 'Charmander', pokeType: 'fire', pokeExp: 62},\r\n    {id: 7, pokeName: 'Squirtle', pokeType: 'water', pokeExp: 63},\r\n    {id: 11, pokeName: 'Metapod', pokeType: 'bug', pokeExp: 72},\r\n    {id: 12, pokeName: 'Butterfree', pokeType: 'flying', pokeExp: 178},\r\n    {id: 25, pokeName: 'Pikachu', pokeType: 'electric', pokeExp: 112},\r\n    {id: 39, pokeName: 'Jigglypuff', pokeType: 'normal', pokeExp: 95},\r\n    {id: 94, pokeName: 'Gengar', pokeType: 'poison', pokeExp: 225},\r\n    {id: 133, pokeName: 'Eevee', pokeType: 'normal', pokeExp: 65}\r\n  ]","import React, { Component } from 'react'\r\nimport Pokedex from './Pokedex'\r\nimport Pokemondata from './Pokemondata';\r\nimport './Pokegame.css'\r\n\r\nclass Pokegame extends Component{\r\n    render(){\r\n        let hand1 =new Array;\r\n        let hand2=[...Pokemondata]\r\n        while(hand1.length<hand2.length){\r\n            let randomNo= Math.floor(Math.random()*hand2.length);\r\n            let randomIdx= hand2.splice(randomNo,1);\r\n            hand1.push(...randomIdx);\r\n        }\r\n        let exp1 =0;\r\n        for (let data of hand1){\r\n            exp1 +=data.pokeExp;\r\n        }\r\n        let exp2 =0;\r\n        for (let data of hand2){\r\n            exp2 +=data.pokeExp;\r\n        }\r\n        return (\r\n            <div className='Pokegame' >\r\n                <div className=\"hand1 hand\">\r\n                    <Pokedex PokeData={hand1} exp={exp1} isWinner={exp1>exp2} />\r\n                </div>\r\n                <div className='hand2 hand'>-\r\n                    <Pokedex PokeData={hand2} exp={exp2} isWinner={exp2>exp1} />\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Pokegame;","import './App.css';\nimport Pokegame from './Pokegame';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>PokeDex</h1>\n      <Pokegame/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}